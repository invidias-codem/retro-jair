/* =========================================
   MENU CONTAINER & GRID (Default Page Layout)
   ========================================= */
/* Base style for #menuContainer */
#menuContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center; /* Centers flex children (e.g., .menu-grid) within this container */
  padding: 0rem;
  width: 75%;
  max-width: 56rem;
  margin-left: auto;
  margin-right: auto;
  margin-top: 2rem;
  height: auto;
  box-sizing: border-box;
}

/* Mobile-specific optimizations */
@media (max-width: 768px) {
  #menuContainer {
    width: 90%;
    padding-left: 1rem;
    padding-right: 1rem;
    margin-top: 1.5rem;
  }
}

/* REFACTORED .menu-grid to support Tailwind's flexbox layout */
.menu-grid {
  /*
    Layout logic (display, alignment, overflow) is now handled by Tailwind CSS classes in the Menu.js component.
    The old `display: grid` and related properties like `width: 120%`, `height: 103vh`, `margin: -115px`,
    and `padding: 9rem` were removed as they caused the overflow and conflicted with the new flexbox layout.
  */
  display: flex; /* Explicitly defining flex to match Tailwind for clarity */
  flex-wrap: wrap; /* Allows menu items to wrap to the next line on smaller screens */
  gap: 1rem; /* Defines the space between menu items */
  padding: 1rem; /* Provides some sensible space around the group of items */
  width: 100%; /* Ensures the container fits within its parent (#menuContainer) */
  background-color: rgba(0, 0, 0, 0); /* Kept from original style */
}


/* =========================================
   GAME ELEMENTS (Countdown, Success)
   ========================================= */
#gameCountdown {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 3.75rem;
  font-weight: bold;
  color: #3B82F6; /* Consider using a CSS variable */
  animation: pulse-countdown 1s infinite; /* Renamed pulse to avoid conflict */
  z-index: 1000;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

.success-message {
  position: absolute;
  top: 2rem;
  left: 50%;
  transform: translateX(-50%);
  padding: 1rem;
  background-color: #059669; /* Consider using a CSS variable */
  color: white;
  border-radius: 0.5rem;
  animation: fadeIn 0.5s ease-out;
}

/* =========================================
   MENU ITEM (Default Page Layout)
   ========================================= */

/* --- A more cohesive, retro-futuristic color palette --- */
:root {
  --menu-bg: #1A202C; /* Dark Charcoal/Slate */
  --menu-bg-hover: #2D3748; /* Lighter Slate for hover */
  --menu-border: #2D3748;
  --menu-accent-glow: rgba(100, 255, 218, 0.7); /* Vibrant Cyan/Mint for glow */
  --menu-icon-color: #64FFDA; /* The solid icon color */
  --menu-text-color: #A0AEC0; /* Muted, readable off-white */
  --menu-text-hover: #E2E8F0; /* Brighter off-white for hover */
}

.menu-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 1.5rem;
  /* MODIFIED: Using new color variables */
  background-color: var(--menu-bg);
  border: 1px solid var(--menu-border);
  border-radius: 0.5rem;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-decoration: none;
  position: relative;
  cursor: pointer;
  transform: translateY(0);
}

.menu-item:hover,
.menu-item:focus {
  transform: translateY(-4px);
  /* MODIFIED: Using new color variables for hover state */
  background-color: var(--menu-bg-hover);
  outline: none;
  /* MODIFIED: A more subtle "glow" effect for the box-shadow */
  box-shadow: 0 0 12px -2px var(--menu-accent-glow);
}

.menu-icon-wrapper {
  margin-bottom: 0.5rem;
}

.menu-icon {
  font-size: 2rem;
  /* MODIFIED: Using the new accent color for the icon */
  color: var(--menu-icon-color);
  transform-style: preserve-3d;
  /* ADDED: A subtle text shadow to make the icon glow */
  text-shadow: 0 0 8px var(--menu-accent-glow);
  transition: color 0.3s ease, text-shadow 0.3s ease;
}

.menu-text {
  /* MODIFIED: Using a more readable, modern text color */
  color: var(--menu-text-color);
  font-weight: bold;
  transition: color 0.3s ease;
}

.menu-item:hover .menu-text {
  /* MODIFIED: Using a brighter text color on hover for better contrast */
  color: var(--menu-text-hover);
}

/* =========================================
   CHAT BUTTON WRAPPER (Default Page Layout)
   ========================================= */
.chat-button-wrapper {
  /* These styles are for when chat button is in the menu grid, not sidebar */
  width: 90%;
  max-width: 350px;
  padding: 15px 20px;
  margin-left: auto; /* Auto margins for centering in grid cell */
  margin-right: auto;
  margin-bottom: 15px;
  background: var(--mindful-primary, #5B9AA0);
  color: var(--mindful-bright-bg, #FFFFFF);
  border-radius: 10px;
  text-align: center;
  text-decoration: none;
  box-sizing: border-box;
  border: none;
  font-weight: 600;
  font-size: 1.05em;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
  cursor: pointer;
  transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
  display: block; /* Or inline-block */
  overflow: hidden;
}

.chat-button-wrapper:hover,
.chat-button-wrapper:focus {
  background-color: var(--mindful-secondary, #457B9D);
  color: var(--mindful-bright-bg, #FFFFFF);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  transform: translateY(-2px);
  outline: none;
}

/* =========================================
   TERMINAL ITEM & CONTAINER (Default Page Layout)
   ========================================= */
.terminal-container { /* Wrapper for the terminal item in the grid */
  grid-column: span 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1.5rem;
  background-color: rgb(31, 41, 55);
  border-radius: 0.5rem;
  animation: fadeIn 0.5s ease-out; /* Ensure fadeIn is defined */
}

.terminal-item { /* Actual terminal link/button */
  display: flex;
  width: 90%;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 0.05rem; /* This is very small, review if intended */
  background: #000080; /* Consider var(--menu-black) or similar */
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  animation: float 3s ease-in-out infinite; /* Ensure float is defined */
}

.terminal-item::before { /* Morse code effect */
  content: '';
  position: absolute;
  width: 100%;
  background: linear-gradient(135deg, 
    rgba(79, 209, 197, 0.2),
    rgba(147, 51, 234, 0.2)
  );
  opacity: 0;
  animation: morseCode 5s infinite; /* Ensure morseCode is defined */
}

.terminal-item::after { /* Glowing border effect */
  content: '';
  position: absolute; /* Was 'center', should be 'absolute' */
  margin-left: 0rem;
  top: -2px; left: -2px; right: -2px; bottom: -2px;
  background: linear-gradient(45deg, #4FD1C5, #9333EA, #4FD1C5);
  border-radius: 0.6rem; /* Slightly larger than item for border effect */
  z-index: -1;
  animation: borderGlow 3s linear infinite; /* Ensure borderGlow is defined */
  opacity: 0.5;
}

.terminal-item:hover {
  transform: translateY(-5px) scale(1.02);
  background: rgba(31, 41, 55, 0.8);
  box-shadow: 
    0 10px 20px rgba(0, 0, 0, 0.3),
    0 0 15px rgba(79, 209, 197, 0.5);
}

.terminal-item .terminal-icon { /* Assuming you have a .terminal-icon class */
  font-size: 2rem;
  color: paleturquoise;
  margin-bottom: 0.5rem;
  transition: all 0.3s ease;
  position: relative;
  z-index: 2;
}

.terminal-item:hover .terminal-icon {
  color: #4FD1C5;
  transform: scale(1.1) rotate(5deg);
  text-shadow: 0 0 10px rgba(79, 209, 197, 0.8);
}

.terminal-item span { /* Text inside terminal item */
  color: #E5E7EB;
  font-weight: bold;
  transition: all 0.3s ease;
  position: relative;
  z-index: 2;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.terminal-item:hover span {
  color: #9333EA;
  transform: scale(1.05);
}

.terminal-item.unlocked::before { /* Special styling for unlocked terminal */
  background: linear-gradient(135deg,
    rgba(79, 209, 197, 0.3),
    rgba(147, 51, 234, 0.3)
  );
  animation: morseCode 5s infinite, unlocked-anim 3s ease-in-out infinite; /* Renamed unlocked to unlocked-anim */
}

/* =========================================
   CUBE & START GAME BUTTON (Default Page Layout)
   ========================================= */
.cube {
  width: 40px;
  height: 40px;
  position: relative;
  transform-style: preserve-3d;
  animation: rotateCube 5s infinite linear; /* Ensure rotateCube is defined */
}

.cube__face {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: paleturquoise;
  border: 2px solid #696958;
  box-shadow: 
    inset 0 5px 10px rgba(0, 0, 0, 0.5),
    0 2px 5px rgba(255, 255, 255, 0.2);
}

.start-game-button {
  /* --- Layout & Sizing --- */
  grid-column: span 2;
  display: block; /* Ensures margins work correctly */
  width: 90%;
  margin: 0 auto; /* Cleaner centering */

  /* --- Thematic Appearance --- */
  background-color: var(--c-brand-accent, #ffc107);
  color: var(--c-brand-text-dark, #1a1a1a);
  border: none;
  border-radius: var(--radius, 4px); /* Use theme's angular radius */
  box-shadow: 2px 2px 0px var(--c-brand-line, #5f7db4); /* "Stamped" effect */

  /* --- Typography --- */
  font-family: var(--font-family-header, 'Teko', sans-serif);
  font-weight: 500;
  font-size: 1.4rem;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  
  /* --- Interactivity --- */
  cursor: pointer;
  /* Smooth transition for all properties */
  transition: all 0.15s ease-out;
}

.start-game-button:hover {
  background-color: #ffd452; /* Slightly brighter yellow */
  /* Button moves up and left, giving a 'lifted' feel */
  transform: translate(-2px, -2px);
  box-shadow: 4px 4px 0px var(--c-brand-line, #5f7db4);
}

.start-game-button:active {
  /* Button looks "pressed down" on click */
  transform: translate(1px, 1px);
  box-shadow: 1px 1px 0px var(--c-brand-line, #5f7db4);
  transition-duration: 0.05s;
}

/* =========================================
   MINDFULMATE BUTTON SPECIFIC STYLES (Default Page Layout)
   These are highly custom and might need significant overrides for sidebar.
   ========================================= */
.mindful-button-wrapper { /* This is a top-level item, similar to .chat-button-wrapper */
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%; /* Or 90% like chat-button-wrapper if in grid */
  height: 100%; /* Usually determined by content or grid row height */
  border-radius: 15px;
  overflow: hidden;
  background: linear-gradient(135deg, var(--mindful-primary, #5B9AA0), var(--mindful-secondary, #457B9D));
  text-decoration: none;
  color: var(--mindful-bright-text, #F8F9FA); /* Corrected from --mindful-bright-bg */
  font-weight: bold;
  transition: all 0.3s ease;
  box-shadow: 0 5px 15px rgba(91, 154, 160, 0.3);
  padding: 15px; /* Added some padding */
  box-sizing: border-box;
}
/* ... rest of your mindful button styles ... */
.mindful-button-wrapper:hover { transform: translateY(-5px); box-shadow: 0 8px 20px rgba(91, 154, 160, 0.5); }
.mindful-container { position: relative; display: flex; align-items: center; justify-content: center; width: 80px; height: 80px; margin-bottom: 10px; }
.mindful-icon-container { position: relative; z-index: 2; display: flex; align-items: center; justify-content: center; width: 50px; height: 50px; border-radius: 50%; background: rgba(255, 255, 255, 0.9); box-shadow: 0 0 10px rgba(91, 154, 160, 0.5); }
.mindful-icon { font-size: 28px; color: #457B9D; }
.mindful-energy-ring { position: absolute; width: 60px; height: 60px; border-radius: 50%; border: 3px solid rgba(168, 218, 220, 0.5); animation: pulse-mindful 2s infinite ease-in-out; /* Renamed pulse */ }
.mindful-power-core { position: absolute; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; }
.mindful-core-inner { position: absolute; width: 25px; height: 25px; border-radius: 50%; background: rgba(168, 218, 220, 0.7); animation: breathe 4s infinite ease-in-out; }
.mindful-core-outer { position: absolute; width: 40px; height: 40px; border-radius: 50%; border: 2px solid rgba(168, 218, 220, 0.5); animation: rotate 8s infinite linear; }
.mindful-core-glow { position: absolute; width: 80px; height: 80px; border-radius: 50%; background: radial-gradient(circle, rgba(168, 218, 220, 0.5) 0%, rgba(69, 123, 157, 0) 70%); animation: glow 3s infinite alternate; }


/* =========================================
   KEYFRAME ANIMATIONS (Ensure all used @keyframes are defined)
   ========================================= */
@keyframes pulse-countdown { /* Renamed from 'pulse' */
  0% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
  50% { opacity: 0.5; transform: translate(-50%, -50%) scale(1.1); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}
@keyframes pulse-mindful { /* Renamed from 'pulse' for mindful button */
  0% { transform: scale(0.9); opacity: 0.5; }
  50% { transform: scale(1.1); opacity: 0.8; }
  100% { transform: scale(0.9); opacity: 0.5; }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}
@keyframes morseCode {
  0%, 5% { opacity: 1; } 6%, 10% { opacity: 0; } 11%, 20% { opacity: 1; } 21%, 25% { opacity: 0; }
  26%, 30% { opacity: 1; } 31%, 35% { opacity: 0; } 36%, 40% { opacity: 1; }
  41%, 50% { opacity: 1; } 51%, 55% { opacity: 0; } 56%, 65% { opacity: 1; } 66%, 70% { opacity: 0; }
  71%, 80% { opacity: 1; }
  81%, 85% { opacity: 1; } 86%, 90% { opacity: 0; } 91%, 95% { opacity: 1; } 96%, 100% { opacity: 0; }
}
@keyframes borderGlow {
  0% { opacity: 0.3; transform: rotate(0deg); }
  50% { opacity: 0.7; }
  100% { opacity: 0.3; transform: rotate(360deg); }
}
@keyframes unlocked-anim { /* Renamed from 'unlocked' */
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}
@keyframes rotateCube {
  from { transform: rotateY(0deg); }
  to { transform: rotateY(360deg); }
}
@keyframes breathe {
  0%, 100% { transform: scale(0.8); opacity: 0.5; }
  50% { transform: scale(1.1); opacity: 0.8; }
}
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
@keyframes glow {
  from { opacity: 0.3; }
  to { opacity: 0.7; }
}

/* =========================================
   RESPONSIVE STYLES (for Menu.css specific elements)
   ========================================= */
@media (max-width: 768px) {
  #menuContainer { /* This is when Menu is used as a main page component */
    width: 90%;
  }

  /* REFACTORED .menu-grid for mobile */
  .menu-grid { /* For main page menu on mobile */
    /* Grid-specific properties like `grid-template-columns` and `justify-items` were removed. */
    /* The layout is now a centered, wrapping flexbox row via Tailwind. */
    gap: 0.5rem; /* A smaller gap for a tighter mobile layout. */
    background-color: var(--mindful-bright-surface, #F8F9FA); /* Kept from original style */
  }

  .chat-button-wrapper,
  .terminal-container, /* Ensure .terminal-container spans full grid width on mobile */
  .mindful-button-wrapper, /* Ensure it spans full width if used in this grid */
  .start-game-button {
    /* `grid-column: span 1` is redundant in a flex layout but harmless. Removing for clarity. */
    width: 100%; /* Ensure they fill the container width */
    margin-left: auto;
    margin-right: auto;
  }
}

/* --- 1. Base Styles for the Menu Item --- */
.menu-item.terminal-link .terminal-item.unlocked::before {
  /* Use retro fonts and colors for the CRT theme */
  font-family: var(--call-font, 'VT323', monospace);
  color: var(--call-text, #00ff41);
  text-shadow: 0 0 5px var(--call-text, #00ff41);
  font-size: 1.5rem; /* A larger, more prominent font size */
  text-decoration: none;
  
  /* Layout and transitions */
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem; /* Add some padding for better spacing */
  border-radius: 2px;
  overflow: hidden; /* Important for the typing animation */
  transition: background-color 0.3s ease;
}

/* --- 2. Styling for the Text Span & Cursor --- */
.menu-item.terminal-link .menu-item-text {
  position: relative; /* Required for positioning the cursor */
  white-space: nowrap; /* Prevent text wrapping during animation */
  overflow: hidden;
  
  /* The "Typing" Animation:
     - Text starts with zero width.
     - On hover, it transitions to its full width using a 'steps' function,
       which creates a choppy, character-by-character reveal.
  */
  width: 0;
  transition: width 0.4s steps(8, end); /* '8' is the number of characters in "Terminal" */
}

/* The Blinking Cursor:
   - Created with an ::after pseudo-element.
   - It is hidden by default and only appears after the typing is done.
*/
.menu-item.menu-item.terminal-link:hover::after {
  content: '_';
  position: absolute;
  right: -12px; /* Position cursor just after the text area */
  opacity: 0; /* Hidden by default */
  animation: blink 1s infinite step-end;
}

/* =========================================
   HOVER EFFECTS
   ========================================= */

.menu-item.terminal-link:hover {
  background-color: rgba(0, 255, 65, 0.1); /* Faint green highlight */
}

/* Reveal the text by transitioning its width */
.menu-item.terminal-link:hover .menu-item-text {
  /* Set a fixed width on hover to reveal the text.
     Adjust this value if your text changes. */
  width: 110px;
}

/* Show and start blinking the cursor AFTER the typing animation is complete */
.menu-item.terminal-link:hover .menu-item-text::after {
  opacity: 1;
  transition: opacity 0.01s ease 0.4s; /* Delay matches the typing transition duration */
}

/* =========================================
   KEYFRAME DEFINITION
   ========================================= */

/* The cursor blink effect toggles opacity */
@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}